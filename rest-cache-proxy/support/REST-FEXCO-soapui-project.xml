<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="17b29a6e-b99a-463c-856b-2921c3ea09fc" activeEnvironment="Default" name="REST-FEXCO" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" resourceRoot="" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:restMockService id="7cdff41d-5a5a-435e-87e7-b9c4e259e257" port="8085" path="/" host="fedora-dev" name="RESTBackend" docroot=""><con:settings/><con:properties/><con:restMockAction name="/pcw/PCW45-12345-12345-1234X/address/ie/D02X285" method="GET" resourcePath="/pcw/PCW45-12345-12345-1234X/address/ie/D02X285" id="03810bcc-6cb0-4715-a2d0-a458d5cb3b90"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="rsp1" id="4aaf0470-f09b-4565-a8f4-668ca05badf6" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>[{"addressline1":"Dept of Communications, Climate Change and Natural Resources","addressline2":"29-31 Adelaide Road","summaryline":"Dept of Communications, Climate Change and Natural Resources, 29-31 Adelaide Road, Dublin 2, D02 X285","organisation":"Dept of Communications, Climate Change and Natural Resources","number":"29-31","premise":"29-31","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 X285"}]</con:responseContent></con:response></con:restMockAction><con:restMockAction name="/pcw/PCW45-12345-12345-1234X/addressgeo/ie" method="GET" resourcePath="/pcw/PCW45-12345-12345-1234X/addressgeo/ie" id="cecdd674-c31b-4bd1-90ef-8980a5f86217"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="rsp1" id="860a2321-7466-41da-8acf-03d13d3f780f" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>[{"summaryline":"Dept of Communications, Climate Change and Natural Resources, 29-31 Adelaide Road, Dublin 2, D02 X285","organisation":"Dept of Communications, Climate Change and Natural Resources","number":"29-31","premise":"29-31","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 X285","latitude":"53.332067","longitude":"-6.255492"}]</con:responseContent></con:response></con:restMockAction><con:restMockAction name="/pcw/PCW45-12345-12345-1234X/position/ie/D02X285" method="GET" resourcePath="/pcw/PCW45-12345-12345-1234X/position/ie/D02X285" id="d8645a42-9a8d-475b-bffa-b9bce1254bc3"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="rsp1" id="135144c0-95f1-4d2e-85cc-fff8cebb93b7" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>[{"latitude":"53.332067","longitude":"-6.255492"}]</con:responseContent></con:response></con:restMockAction><con:restMockAction name="/pcw/PCW45-12345-12345-1234X/rgeo/ie/53.332067/-6.255492" method="GET" resourcePath="/pcw/PCW45-12345-12345-1234X/rgeo/ie/53.332067/-6.255492" id="7b495651-30c5-4c2e-bbdb-e3d3b305f076"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="rsp1" id="5be0a4a2-7f8c-4eb0-996b-3e25ca2f925e" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>[{"summaryline":"Irish Pension Trust, Marsh House, 25-28 Adelaide Road, Dublin 2, D02 RY98","organisation":"Irish Pension Trust","buildingname":"Marsh House","number":"25-28","premise":"Marsh House, 25-28","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 RY98"},{"summaryline":"Dept of Communications, Climate Change and Natural Resources, 29-31 Adelaide Road, Dublin 2, D02 X285","organisation":"Dept of Communications, Climate Change and Natural Resources","number":"29-31","premise":"29-31","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 X285"},{"summaryline":"Communications Clinic, Mespil House, 37 Adelaide Road, Dublin 2, D02 KR74","organisation":"Communications Clinic","buildingname":"Mespil House","number":"37","premise":"Mespil House, 37","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 KR74"},{"summaryline":"Marsh Ireland Limited, Marsh House, 25-28 Adelaide Road, Dublin 2, D02 RY98","organisation":"Marsh Ireland Limited","buildingname":"Marsh House","number":"25-28","premise":"Marsh House, 25-28","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 RY98"},{"summaryline":"Marsh Insurance, Marsh House, 25-28 Adelaide Road, Dublin 2, D02 RY98","organisation":"Marsh Insurance","buildingname":"Marsh House","number":"25-28","premise":"Marsh House, 25-28","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 RY98"},{"summaryline":"Bowring Marsh, Marsh House, 25-28 Adelaide Road, Dublin 2, D02 RY98","organisation":"Bowring Marsh","buildingname":"Marsh House","number":"25-28","premise":"Marsh House, 25-28","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 RY98"},{"summaryline":"Loan Star, Marsh House, 25-28 Adelaide Road, Dublin 2, D02 RY98","organisation":"Loan Star","buildingname":"Marsh House","number":"25-28","premise":"Marsh House, 25-28","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 RY98"},{"summaryline":"Ffh Management Services Limited, Marsh House, 25-28 Adelaide Road, Dublin 2, D02 RY98","organisation":"Ffh Management Services Limited","buildingname":"Marsh House","number":"25-28","premise":"Marsh House, 25-28","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 RY98"},{"summaryline":"Hudson Advisors Ireland Limited, Marsh House, 25-28 Adelaide Road, Dublin 2, D02 RY98","organisation":"Hudson Advisors Ireland Limited","buildingname":"Marsh House","number":"25-28","premise":"Marsh House, 25-28","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 RY98"},{"summaryline":"Mercer Global Investments, Marsh House, 25-28 Adelaide Road, Dublin 2, D02 RY98","organisation":"Mercer Global Investments","buildingname":"Marsh House","number":"25-28","premise":"Marsh House, 25-28","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 RY98"},{"summaryline":"Brown Brothers Harriman Trustee Services Ireland Limited, Marsh House, 25-28 Adelaide Road, Dublin 2, D02 RY98","organisation":"Brown Brothers Harriman Trustee Services Ireland Limited","buildingname":"Marsh House","number":"25-28","premise":"Marsh House, 25-28","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 RY98"},{"summaryline":"Extrion Media, Marsh House, 25-28 Adelaide Road, Dublin 2, D02 RY98","organisation":"Extrion Media","buildingname":"Marsh House","number":"25-28","premise":"Marsh House, 25-28","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 RY98"},{"summaryline":"Mfxchange Ireland Limited, Marsh House, 25-28 Adelaide Road, Dublin 2, D02 RY98","organisation":"Mfxchange Ireland Limited","buildingname":"Marsh House","number":"25-28","premise":"Marsh House, 25-28","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 RY98"},{"summaryline":"Lone Star International, Marsh House, 25-28 Adelaide Road, Dublin 2, D02 RY98","organisation":"Lone Star International","buildingname":"Marsh House","number":"25-28","premise":"Marsh House, 25-28","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 RY98"},{"summaryline":"Marsh Financial Services, Marsh House, 25-28 Adelaide Road, Dublin 2, D02 RY98","organisation":"Marsh Financial Services","buildingname":"Marsh House","number":"25-28","premise":"Marsh House, 25-28","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 RY98"},{"summaryline":"37 Symphony House, Adelaide Road, Dublin 2, D02 EW71","buildinggroupname":"Symphony House","number":"37","premise":"37, Symphony House","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 EW71"},{"summaryline":"38 Symphony House, Adelaide Road, Dublin 2, D02 H327","buildinggroupname":"Symphony House","number":"38","premise":"38, Symphony House","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 H327"},{"summaryline":"39 Symphony House, Adelaide Road, Dublin 2, D02 PH28","buildinggroupname":"Symphony House","number":"39","premise":"39, Symphony House","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 PH28"},{"summaryline":"36 Symphony House, Adelaide Road, Dublin 2, D02 PX29","buildinggroupname":"Symphony House","number":"36","premise":"36, Symphony House","street":"Adelaide Road","posttown":"Dublin 2","county":"Dublin","postcode":"D02 PX29"}]</con:responseContent></con:response></con:restMockAction><con:restMockAction name="/pcw/PCW45-12345-12345-1234X/address/uk/NR147PZ" method="GET" resourcePath="/pcw/PCW45-12345-12345-1234X/address/uk/NR147PZ" id="67e5f2c8-a842-4652-ab8c-065e469ea394"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="rsp1" id="ae13517f-6bd5-4a1a-9fac-f3bc3a44deb9" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>[{"summaryline":"Allies Computing Ltd, Manor Farm Barns, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","organisation":"Allies Computing Ltd","buildingname":"Manor Farm Barns","premise":"Manor Farm Barns","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"B2B Cashflow Solutions Ltd, Manor Farm Barns, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","organisation":"B2B Cashflow Solutions Ltd","buildingname":"Manor Farm Barns","premise":"Manor Farm Barns","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Brasteds Event Excellence, Manor Farm Barns, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","organisation":"Brasteds Event Excellence","buildingname":"Manor Farm Barns","premise":"Manor Farm Barns","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Brasteds Lodge, Manor Farm Barns, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","organisation":"Brasteds Lodge","buildingname":"Manor Farm Barns","premise":"Manor Farm Barns","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Change Consultancy &amp; Training Ltd, Manor Farm Barns, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","organisation":"Change Consultancy &amp; Training Ltd","buildingname":"Manor Farm Barns","premise":"Manor Farm Barns","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Conker Interiors Ltd, Manor Farm Barns, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","organisation":"Conker Interiors Ltd","buildingname":"Manor Farm Barns","premise":"Manor Farm Barns","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Eastern Chauffeurs Ltd, Manor Farm Barns, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","organisation":"Eastern Chauffeurs Ltd","buildingname":"Manor Farm Barns","premise":"Manor Farm Barns","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Equal Lives, Manor Farm Barns, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","organisation":"Equal Lives","buildingname":"Manor Farm Barns","premise":"Manor Farm Barns","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Estate Office, Manor Farm Barns, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","organisation":"Estate Office","buildingname":"Manor Farm Barns","premise":"Manor Farm Barns","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Framingham Pigot Parish Meeting, Manor Farm Barns, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","organisation":"Framingham Pigot Parish Meeting","buildingname":"Manor Farm Barns","premise":"Manor Farm Barns","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Genesis Lifts Ltd, Manor Farm Barns, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","organisation":"Genesis Lifts Ltd","buildingname":"Manor Farm Barns","premise":"Manor Farm Barns","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Independent Living, Manor Farm Barns, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","organisation":"Independent Living","buildingname":"Manor Farm Barns","premise":"Manor Farm Barns","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Mancroft International, Manor Farm Barns, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","organisation":"Mancroft International","buildingname":"Manor Farm Barns","premise":"Manor Farm Barns","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Norfolk Appropriate Adult Service, Manor Farm Barns, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","organisation":"Norfolk Appropriate Adult Service","buildingname":"Manor Farm Barns","premise":"Manor Farm Barns","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Serenity Training Ltd, Manor Farm Barns, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","organisation":"Serenity Training Ltd","buildingname":"Manor Farm Barns","premise":"Manor Farm Barns","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"(Potter), Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","buildingname":"(Potter)","premise":"(Potter)","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Beck Cottage, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","buildingname":"Beck Cottage","premise":"Beck Cottage","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Burnside, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","buildingname":"Burnside","premise":"Burnside","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Charles Cottage, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","buildingname":"Charles Cottage","premise":"Charles Cottage","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Cottage-On-The-Beck, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","buildingname":"Cottage-On-The-Beck","premise":"Cottage-On-The-Beck","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Foxes Cottage, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","buildingname":"Foxes Cottage","premise":"Foxes Cottage","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Framingham Cottage, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","buildingname":"Framingham Cottage","premise":"Framingham Cottage","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"Old Manor Farm, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","buildingname":"Old Manor Farm","premise":"Old Manor Farm","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"1 Penns Cottages, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","buildingname":"1 Penns Cottages","premise":"1 Penns Cottages","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"2 Penns Cottages, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","buildingname":"2 Penns Cottages","premise":"2 Penns Cottages","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"The Grange, Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","buildingname":"The Grange","premise":"The Grange","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"1 Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","number":"1","premise":"1","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"},{"summaryline":"2 Fox Road, Framingham Pigot, Norwich, Norfolk, NR14 7PZ","number":"2","premise":"2","street":"Fox Road","dependentlocality":"Framingham Pigot","posttown":"Norwich","county":"Norfolk","postcode":"NR14 7PZ"}]</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/></con:soapui-project>